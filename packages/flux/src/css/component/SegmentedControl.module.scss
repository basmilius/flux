@use '$flux/css/mixin';

@value flexRow, inlineFlexRow from './base/Flex.module.scss';

.segmentedControl {
    position: relative;
    padding: 3px;
    align-items: center;
    gap: 1px;
    background: rgb(var(--gray-1));
    border: 1px solid rgb(var(--gray-2));
    border-radius: var(--radius);
}

.segmentedControlFill {
    composes: flexRow;
    composes: segmentedControl;
}

.segmentedControlInline {
    composes: inlineFlexRow;
    composes: segmentedControl;

    width: min-content;
}

.segmentedControlHighlight {
    position: absolute;
    top: 3px;
    bottom: 3px;
    background: rgb(var(--gray-0));
    border: 1px solid rgb(var(--gray-3));
    border-radius: calc(var(--radius) - 3px);
    box-shadow: var(--shadow-sm);
    pointer-events: none;
    transition: 300ms var(--swift-out);
    transition-property: left, width;
}

.segmentedControlItem {
    display: flex;
    height: 36px;
    padding-left: 12px;
    padding-right: 12px;
    align-items: center;
    flex: 1 1 0;
    gap: 9px;
    justify-content: center;
    background: none;
    border: 0;
    border-radius: calc(var(--radius) - 3px);
    color: var(--foreground);
    cursor: pointer;
    font-weight: 500;
    text-align: center;
    transition: 300ms var(--swift-out);
    transition-property: background, color;

    @include mixin.hover {
        background: rgb(var(--gray-2));
    }

    &.isActive {
        background: none;
        color: var(--foreground-prominent);
        cursor: default;
    }

    > * {
        position: relative;
    }
}

.segmentedControlSeparator {
    height: 15px;
    width: 1px;
    flex-shrink: 0;
    background: rgb(var(--gray-3));
    transition: opacity 300ms var(--swift-out);

    &.isActive {
        opacity: 0;
    }
}
