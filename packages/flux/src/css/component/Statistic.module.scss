@value flexColumn, flexRow, flexGrow from '@/css/component/base/Flex.module.scss';

.statistic {
    padding: 21px;
    gap: 21px;

    &.isGray .statisticIcon {
        background: rgb(var(--gray-3));
        color: rgb(var(--gray-7));
    }

    &.isPrimary .statisticIcon {
        background: rgb(var(--primary-2));
        color: rgb(var(--primary-7));
    }

    &.isDanger .statisticIcon {
        background: rgb(var(--danger-2));
        color: rgb(var(--danger-7));
    }

    &.isInfo .statisticIcon {
        background: rgb(var(--info-2));
        color: rgb(var(--info-7));
    }

    &.isSuccess .statisticIcon {
        background: rgb(var(--success-2));
        color: rgb(var(--success-7));
    }

    &.isWarning .statisticIcon {
        background: rgb(var(--warning-2));
        color: rgb(var(--warning-7));
    }
}

.statisticChange {
    composes: flexRow;

    align-items: center;
    align-self: flex-end;
    gap: 6px;
    font-size: 12px;
    font-weight: 600;
    line-height: 1;

    &.isGray {
        color: var(--foreground-prominent);
    }

    &.isPrimary {
        color: rgb(var(--primary-7));
    }

    &.isDanger {
        color: rgb(var(--danger-7));
    }

    &.isInfo {
        color: rgb(var(--info-7));
    }

    &.isSuccess {
        color: rgb(var(--success-7));
    }

    &.isWarning {
        color: rgb(var(--warning-7));
    }
}

.statisticData {
    composes: flexColumn;
    composes: flexGrow;

    gap: 9px;
    line-height: 1;

    :is(span) {
        color: var(--foreground-secondary);
    }

    :is(strong) {
        color: var(--foreground-prominent);
        font-size: 24px;
        font-weight: 700;
    }
}

.statisticIcon {
    display: flex;
    height: 48px;
    width: 48px;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius);
}

.statisticHorizontal {
    composes: flexRow;
    composes: statistic;
}

.statisticVertical {
    composes: flexColumn;
    composes: statistic;

    align-items: center;
    text-align: center;

    .statisticChange {
        align-self: center;
    }

    .statisticData {
        align-items: center;
    }
}

[dark] .statistic .statisticIcon {
    background: rgb(var(--gray-2));
}
