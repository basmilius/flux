@value flex, flexColumn, flexRow, flexGrow, flexNoShrink from '@/css/component/base/Flex.module.scss';

.notice {
    composes: flexRow;

    padding: 21px;
    gap: 15px;
    border-radius: var(--radius);

    .button {
        margin-top: -9px;
        margin-right: -9px;
        margin-bottom: -9px;
    }

    a {
        color: currentColor;
    }

    ul {
        margin-top: 3px;
        padding-left: 1em;
        list-style-type: disc;

        li + li {
            margin-top: 9px;
        }
    }
}

.noticeBody {
    composes: flexColumn;
    composes: flexGrow;

    gap: 3px;
    text-wrap: pretty;

    &:last-child {
        flex-grow: 0;
    }
}

.noticeClose {
    composes: flex;

    height: 24px;
    width: 24px;
    padding: 0;
    align-items: center;
    justify-content: center;
    border: 0;
    border-radius: 12px;
    color: currentColor;
    cursor: pointer;
    transition: opacity 150ms var(--swift-out);

    @media (hover: hover) {
        &:hover {
            opacity: .75;
        }
    }

    > .icon {
        font-size: 16px;
    }
}

.noticePrefix {
    composes: flexNoShrink;

    margin-top: 2px;
}

.noticeMessage,
.noticeTitle {
    margin: 0;
}

.noticeTitle {
    font-weight: 700;
}

.notice.isCenter {
    justify-content: center;
    text-align: center;
}

.notice.isFluid {
    border-style: solid;
    border-width: 1px;
    border-left: 0;
    border-right: 0;
    border-radius: 0;

    &:first-child {
        border-top: 0;
    }

    &:last-child {
        border-bottom: 0;
    }
}

.notice.isSmall {
    padding: 15px;
    gap: 12px;

    .noticeBody {
        margin-top: -3px;
        margin-bottom: -3px;
    }

    .noticeClose {
        height: 20px;
        width: 20px;

        .icon {
            font-size: 14px;
        }
    }

    .button {
        height: 36px;
    }
}

.noticeGray {
    composes: notice;

    background: rgb(var(--gray-2));
    border-color: rgb(var(--gray-4));
    color: var(--foreground);

    .noticeClose {
        background: rgb(var(--gray-4));
    }

    .noticePrefix,
    .noticeTitle {
        color: var(--foreground-prominent);
    }

    .spinnerTrack {
        stroke: rgb(var(--gray-4));
    }

    .spinnerEffect,
    .spinnerValue {
        stroke: rgb(var(--gray-10));
    }
}

.noticePrimary {
    composes: notice;

    background: rgb(var(--primary-2));
    border-color: rgb(var(--primary-3));
    color: rgb(var(--primary-11));

    .noticeClose {
        background: rgb(var(--primary-3));
    }

    .noticePrefix,
    .noticeTitle {
        color: rgb(var(--primary-7));
    }

    .spinnerTrack {
        stroke: rgb(var(--primary-3));
    }

    .spinnerEffect,
    .spinnerValue {
        stroke: rgb(var(--primary-7));
    }
}

.noticeDanger {
    composes: notice;

    background: rgb(var(--danger-2));
    border-color: rgb(var(--danger-3));
    color: rgb(var(--danger-11));

    .noticeClose {
        background: rgb(var(--danger-3));
    }

    .noticePrefix,
    .noticeTitle {
        color: rgb(var(--danger-7));
    }

    .spinnerTrack {
        stroke: rgb(var(--danger-3));
    }

    .spinnerEffect,
    .spinnerValue {
        stroke: rgb(var(--danger-7));
    }
}

.noticeInfo {
    composes: notice;

    background: rgb(var(--info-2));
    border-color: rgb(var(--info-3));
    color: rgb(var(--info-11));

    .noticeClose {
        background: rgb(var(--info-3));
    }

    .noticePrefix,
    .noticeTitle {
        color: rgb(var(--info-7));
    }

    .spinnerTrack {
        stroke: rgb(var(--info-3));
    }

    .spinnerEffect,
    .spinnerValue {
        stroke: rgb(var(--info-7));
    }
}

.noticeSuccess {
    composes: notice;

    background: rgb(var(--success-2));
    border-color: rgb(var(--success-3));
    color: rgb(var(--success-11));

    .noticeClose {
        background: rgb(var(--success-3));
    }

    .noticePrefix,
    .noticeTitle {
        color: rgb(var(--success-7));
    }

    .spinnerTrack {
        stroke: rgb(var(--success-3));
    }

    .spinnerEffect,
    .spinnerValue {
        stroke: rgb(var(--success-7));
    }
}

.noticeWarning {
    composes: notice;

    background: rgb(var(--warning-2));
    border-color: rgb(var(--warning-3));
    color: rgb(var(--warning-11));

    .noticeClose {
        background: rgb(var(--warning-3));
    }

    .noticePrefix,
    .noticeTitle {
        color: rgb(var(--warning-7));
    }

    .spinnerTrack {
        stroke: rgb(var(--warning-3));
    }

    .spinnerEffect,
    .spinnerValue {
        stroke: rgb(var(--warning-7));
    }
}

[dark] .noticePrimary {
    background: rgb(var(--primary-11) / .25);
    border-color: rgb(var(--primary-11));
    color: rgb(var(--primary-4));

    .noticePrefix,
    .noticeTitle {
        color: rgb(var(--primary-6));
    }

    .spinnerTrack {
        stroke: rgb(var(--primary-11));
    }
}

[dark] .noticeDanger {
    background: rgb(var(--danger-11) / .25);
    border-color: rgb(var(--danger-11));
    color: rgb(var(--danger-4));

    .noticePrefix,
    .noticeTitle {
        color: rgb(var(--danger-6));
    }

    .spinnerTrack {
        stroke: rgb(var(--danger-11));
    }
}

[dark] .noticeInfo {
    background: rgb(var(--info-11) / .25);
    border-color: rgb(var(--info-11));
    color: rgb(var(--info-4));

    .noticePrefix,
    .noticeTitle {
        color: rgb(var(--info-6));
    }

    .spinnerTrack {
        stroke: rgb(var(--info-11));
    }
}

[dark] .noticeSuccess {
    background: rgb(var(--success-11) / .25);
    border-color: rgb(var(--success-11));
    color: rgb(var(--success-4));

    .noticePrefix,
    .noticeTitle {
        color: rgb(var(--success-6));
    }

    .spinnerTrack {
        stroke: rgb(var(--success-11));
    }
}

[dark] .noticeWarning {
    background: rgb(var(--warning-11) / .25);
    border-color: rgb(var(--warning-11));
    color: rgb(var(--warning-4));

    .noticePrefix,
    .noticeTitle {
        color: rgb(var(--warning-6));
    }

    .spinnerTrack {
        stroke: rgb(var(--warning-11));
    }
}

.paneHeader + .notice,
.paneHeader + .stack > .notice {
    margin-top: 21px;
}

.basePaneStructure > .notice,
.basePaneStructure > .stack > .notice {
    padding-left: 21px;
    padding-right: 21px;
    border-radius: 0;
}
