@use '$flux/css/mixin';

.notice {
    composes: basePaneElement from './base/Pane.module.scss';

    display: flex;
    padding: 12px 15px;
    gap: 12px;
    border-radius: var(--radius);

    .button {
        margin-top: -6px;
        margin-right: -9px;
        margin-bottom: -6px;
        height: 36px;
    }

    a {
        color: currentColor;
    }

    ul {
        margin-top: 3px;
        padding-left: 1em;
        list-style-type: disc;

        li + li {
            margin-top: 9px;
        }
    }
}

.noticeBody {
    display: flex;
    flex-flow: column;
    flex-grow: 1;
    text-wrap: pretty;

    :global(p) {
        line-height: 1.6;
    }

    &:last-child {
        flex-grow: 0;
    }
}

.noticeClose {
    display: flex;
    height: 20px;
    width: 20px;
    margin: 2px;
    padding: 0;
    align-items: center;
    flex-shrink: 0;
    justify-content: center;
    border: 0;
    border-radius: 12px;
    color: currentColor;
    cursor: pointer;
    transition: opacity 150ms var(--swift-out);

    @include mixin.hover {
        opacity: .75;
    }

    > .icon {
        font-size: 14px;
    }
}

.noticePrefix {
    margin-top: 2px;
    flex-shrink: 0;
    font-size: 20px;
}

.noticeMessage,
.noticeTitle {
    margin: 0;
}

.noticeTitle {
    font-weight: 600;
}

.notice.isCenter {
    justify-content: center;
    text-align: center;
}

.notice.isFluid {
    border-style: solid;
    border-width: 1px;
    border-left: 0;
    border-right: 0;
    border-radius: 0;

    &:first-child {
        border-top: 0;
    }

    &:last-child {
        border-bottom: 0;
    }
}

.noticeGray {
    composes: notice;

    background: var(--gray-1);
    border-color: var(--gray-2);
    color: var(--foreground);

    .noticeClose {
        background: var(--gray-3);
    }

    .noticePrefix,
    .noticeTitle {
        color: var(--foreground-prominent);
    }
}

.noticePrimary {
    composes: notice;

    background: var(--primary-2);
    border-color: var(--primary-3);
    color: var(--primary-11);

    .noticeClose {
        background: var(--primary-3);
    }

    .noticePrefix,
    .noticeTitle {
        color: var(--primary-7);
    }

    :local(.button) {
        border-color: var(--primary-4);
    }

    :local(.spinnerTrack) {
        stroke: var(--primary-3);
    }

    :local(.spinnerEffect),
    :local(.spinnerValue) {
        stroke: var(--primary-7);
    }
}

.noticeDanger {
    composes: notice;

    background: var(--danger-2);
    border-color: var(--danger-3);
    color: var(--danger-11);

    .noticeClose {
        background: var(--danger-3);
    }

    .noticePrefix,
    .noticeTitle {
        color: var(--danger-7);
    }

    :local(.button) {
        border-color: var(--danger-4);
    }

    :local(.spinnerTrack) {
        stroke: var(--danger-3);
    }

    :local(.spinnerEffect),
    :local(.spinnerValue) {
        stroke: var(--danger-7);
    }
}

.noticeInfo {
    composes: notice;

    background: var(--info-2);
    border-color: var(--info-3);
    color: var(--info-11);

    .noticeClose {
        background: var(--info-3);
    }

    .noticePrefix,
    .noticeTitle {
        color: var(--info-7);
    }

    :local(.button) {
        border-color: var(--info-4);
    }

    :local(.spinnerTrack) {
        stroke: var(--info-3);
    }

    :local(.spinnerEffect),
    :local(.spinnerValue) {
        stroke: var(--info-7);
    }
}

.noticeSuccess {
    composes: notice;

    background: var(--success-2);
    border-color: var(--success-3);
    color: var(--success-11);

    .noticeClose {
        background: var(--success-3);
    }

    .noticePrefix,
    .noticeTitle {
        color: var(--success-7);
    }

    :local(.button) {
        border-color: var(--success-4);
    }

    :local(.spinnerTrack) {
        stroke: var(--success-3);
    }

    :local(.spinnerEffect),
    :local(.spinnerValue) {
        stroke: var(--success-7);
    }
}

.noticeWarning {
    composes: notice;

    background: var(--warning-2);
    border-color: var(--warning-3);
    color: var(--warning-11);

    .noticeClose {
        background: var(--warning-3);
    }

    .noticePrefix,
    .noticeTitle {
        color: var(--warning-7);
    }

    :local(.button) {
        border-color: var(--warning-4);
    }

    :local(.spinnerTrack) {
        stroke: var(--warning-3);
    }

    :local(.spinnerEffect),
    :local(.spinnerValue) {
        stroke: var(--warning-7);
    }
}

.basePane > .notice {
    padding-left: 21px;
    padding-right: 21px;
}
