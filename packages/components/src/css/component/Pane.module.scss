.pane {
    composes: basePaneStructure from './base/Pane.module.scss';
}

.paneDefault {
    composes: pane;

    box-shadow: var(--shadow-sm);
}

.paneFlat {
    composes: pane;
}

.paneWell {
    composes: pane;

    background: var(--gray-1);
}

.paneHeader {
    composes: basePaneElement from './base/Pane.module.scss';

    display: flex;
    padding: 21px 21px 0;
    gap: 15px;

    &:only-child {
        padding: 21px;
    }

    &:has(+ .basePaneElement:not(.paneBody)) {
        padding: 21px;
    }
}

.paneHeaderCaption {
    display: flex;
    flex-flow: column;
    flex-grow: 1;
    line-height: 24px;

    :is(strong) {
        color: var(--foreground-prominent);
        font-weight: 600;

        &:has(+ :is(span)) {
            font-size: 16px;
        }
    }

    :is(span) {
        font-size: 14px;
    }
}

.paneHeaderIcon {
    margin-top: 2px;
    color: var(--primary-7);
}

.paneBody {
    composes: basePaneElement from './base/Pane.module.scss';

    padding: 21px;
}

.paneBody + .paneBody {
    padding-top: 0;
}

.paneFooter {
    composes: basePaneElement from './base/Pane.module.scss';

    display: flex;
    padding: 21px;
    gap: 9px;
    background: var(--gray-0);
    border-top: 1px solid var(--gray-1);
}

.paneLoader {
    composes: basePaneLoader from './base/Pane.module.scss';
}

.paneTag {
    position: absolute;
    top: 15px;
    right: 15px;
    padding: 6px 9px;
    background: var(--gray-10);
    border-radius: calc(var(--radius) / 2);
    color: var(--gray-0);
    font-size: 11px;
    font-weight: 700;
    letter-spacing: 1px;
    line-height: 1;
    text-transform: uppercase;
}

.paneMedia {
    position: relative;
    overflow: hidden;
}

.paneMediaInset {
    composes: paneMedia;

    margin: 21px;
    border-radius: calc(var(--radius) / 2);

    &:not(:first-child) {
        margin-top: 0;
    }

    &:not(:last-child) {
        margin-bottom: 0;
    }
}

.paneMediaImage {
    display: block;
    height: auto;
    width: 100%;
    margin: 0;
    aspect-ratio: 2 / 1;
    object-fit: cover;
    object-position: center;
}

.paneDeck {
    composes: paneDefault;

    overflow: hidden;

    > .baseAutoGrid {
        margin-right: -1px;
        margin-bottom: -1px;

        > .pane {
            border-top: 0;
            border-left: 0;
            border-radius: 0;
        }
    }
}

.paneGroup {
    position: relative;
}

.paneGroup + .paneGroup {
    border-top: 1px solid oklch(from var(--gray-11) l c h / .05);
}

.paneIllustration {
    --mask: linear-gradient(to bottom, black, transparent);
    --mask-content: linear-gradient(to bottom, black, rgb(0 0 0 / .75), transparent);

    position: relative;
    border-radius: calc(var(--radius) - 1px);

    &:not(:first-child) {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
    }

    &:not(:last-child) {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
    }
}

.paneIllustrationContent {
    position: relative;
    display: flex;
    height: 100%;
    align-items: center;
    justify-content: center;
}

.paneIllustrationContentControlled {
    composes: paneIllustrationContent;

    overflow: hidden;

    -webkit-mask-image: var(--mask-content);
    mask-image: var(--mask-content);
}

.paneIllustrationMagic {
    position: absolute;
    inset: -1px;
    border-radius: inherit;
}

.paneIllustrationMasked {
    composes: paneIllustration;

    .paneIllustrationMagic {
        -webkit-mask-image: var(--mask);
        mask-image: var(--mask);
    }
}

.paneIllustration + :where(.paneBody, .paneHeader) {
    position: relative;
    margin-top: -60px;
}

.paneBody:has(.iconBoxed:only-child):has(+ .paneHeader) {
    padding-bottom: 0;
}
