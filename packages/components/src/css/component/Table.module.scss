.table {
    composes: basePaneElement from './base/Pane.module.scss';

    position: relative;
    display: flex;
    container: table / inline-size;
    flex-flow: column;
    overflow: auto;

    :is(caption) {
        color: var(--foreground-secondary);
        font-size: 14px;
        text-align: left;
    }
}

.tableBase {
    min-width: 100cqw;
    bottom: 0;
    border-spacing: 0;
    text-align: left;

    &:has(.tableFill) {
        flex-grow: 1;
    }

    &:has(.tableFill):has(.tablePagination) {
        margin-bottom: -1px;
    }
}

.tableLoader {
    composes: basePaneLoader from './base/Pane.module.scss';
}

.tableRow {
    height: 0;
    margin: 0;
    padding: 0;
}

.tableCell {
    height: 0;
    padding: 0;
    border: 0 solid var(--gray-2);

    @-moz-document url-prefix() {
        height: 100%;
    }
}

.tableCellContent {
    display: flex;
    height: 100%;
    padding: 12px 15px;
    align-items: flex-start;
}

.tableHeader {
    composes: tableCell;

    border-bottom: 2px solid var(--gray-2);
    color: var(--foreground-prominent);

    &.isShrinking {
        width: 0;
        white-space: nowrap;
    }

    &.isSticky {
        position: sticky;
        top: 0;
        background: var(--gray-1);
        z-index: 1;
    }
}

.tableHeaderContent {
    composes: tableCellContent;

    align-items: center;
    font-size: 14px;
}

tbody .tableRow:nth-child(even) .tableCell.isStriped {
    background: oklch(from var(--gray-1) l c h / .5);
}

@media (hover: hover) {
    tbody .tableRow:hover .tableCell.isHoverable,
    tbody .tableRow:has(:focus-visible) .tableCell.isHoverable {
        background: var(--gray-1);
    }
}

tfoot .tableCell {
    border-top: 1px solid var(--gray-2);
}

.tableCell + .tableCell.isBordered {
    border-left-width: 1px;
}

.tableRow + .tableRow .tableCell.isSeparated {
    border-top-width: 1px;
}

.tableActions {
    margin: -3px 0 -3px -3px;
}

.tableFill {
    pointer-events: none;

    .tableCell {
        height: 100%;
    }

    .tableCellContent {
        padding: 0;
    }
}

.tableBar {
    composes: tableCell;

    position: relative;
    background: var(--gray-1);
    box-shadow: 0 0 24px var(--gray-1),
                0 0 18px var(--gray-1),
                0 0 12px var(--gray-1),
                0 0 9px var(--gray-1),
                0 0 6px var(--gray-1),
                0 0 3px var(--gray-1);
    z-index: 2;
}

.tableBarContent {
    composes: tableCellContent;

    position: sticky;
    left: 0;
    max-width: 100cqw;
    flex-flow: row nowrap;
    gap: 15px;

    > :local(.formInput) {
        max-width: 300px;
        min-width: 210px;
    }
}

.tablePagination {
    position: sticky;
    bottom: 0;
    margin-top: auto;
    margin-bottom: -1px;
    background: var(--gray-0);
    border-top: 1px solid var(--gray-2);
    translate: 0 -1px;
    z-index: 100;
}

.tableSort {
    display: flex;
    height: 24px;
    width: 24px;
    margin: -3px -6px -3px 6px;
    padding: 0;
    align-items: center;
    justify-content: center;
    background: unset;
    border: 0;
    border-radius: calc(var(--radius) / 2);
    color: var(--foreground-secondary);
    cursor: pointer;
    outline: 0;

    @media (hover: hover) {
        &:hover {
            background: var(--gray-2);
            color: var(--foreground);
        }
    }
}

.basePaneStructure > .table .tableCell:first-child .tableCellContent {
    padding-left: 21px;
}

.basePaneStructure > .table .tableCell:last-child .tableCellContent {
    padding-right: 21px;
}

.basePaneStructure > .table .tableActions {
    margin-right: -3px;
}

.basePaneStructure > .table :is(caption) {
    padding: 12px 21px;
    border-top: 1px solid var(--gray-3);
}

.basePaneStructure > .table .tableLoader {
    border-radius: var(--radius);
}

:not(.basePaneStructure) > .table .tableCell:not(.isBordered):first-child .tableCellContent {
    padding-left: 0;
}

:not(.basePaneStructure) > .table .tableCell:not(.isBordered):last-child .tableCellContent {
    padding-right: 0;
}
